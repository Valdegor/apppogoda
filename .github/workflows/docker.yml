name: Build and Push Weather Image

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build image with CVE scan
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          cache-from: type=registry,ref=valdegor/cache:weather
          cache-to: type=registry,mode=max,ref=valdegor/cache:weather
          tags: ${{ steps.meta.outputs.tags }}

      - name: Scan image for CVEs
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          format: table
          exit-code: 1

      - name: Push image to GHCR (only if scan passed)
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=valdegor/cache:weather
          cache-to: type=registry,mode=max,ref=valdegor/cache:weather
          tags: ${{ steps.meta.outputs.tags }}
